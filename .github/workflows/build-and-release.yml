name: Build and Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.4
        
    - name: Build with Maven
      run: |
        cd image-watermarker
        mvn clean package -DskipTests
        
    - name: Create Windows Executable (app-image)
      run: |
        cd image-watermarker
        # Create a portable app image first since WiX might not be available
        jpackage --input target --name "Photo Watermark" --app-version "${{ github.ref_name }}" --vendor "My Watermark Inc." --dest target/app-package --main-jar image-watermarker-1.0-SNAPSHOT.jar --main-class com.mywatermark.App --type app-image
        
    - name: Zip the app image for distribution
      run: |
        cd image-watermarker/target
        Compress-Archive -Path app-package\* -DestinationPath Photo-Watermark-${{ github.ref_name }}.zip
          
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (ZIP)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./image-watermarker/target/Photo-Watermark-${{ github.ref_name }}.zip
        asset_name: Photo-Watermark-${{ github.ref_name }}.zip
        asset_content_type: application/zip